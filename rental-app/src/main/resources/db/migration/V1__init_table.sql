DO $$ BEGIN
    CREATE TYPE "roles" AS ENUM (
        'admin',
        'user'
    );
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
    CREATE TYPE "car_type" AS ENUM (
        'sedan',
        'suv',
        'truck'
    );
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
    CREATE TYPE payment_status AS ENUM ('pending', 'paid', 'cancelled');
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
    CREATE TYPE rent_status AS ENUM ('rented', 'returned', 'not_rented', 'cancelled');
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;

CREATE TABLE IF NOT EXISTS "users" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "username" varchar,
  "email" varchar,
  "password" varchar,
  "role" roles,
  "created_at" timestamp,
  "updated_at" timestamp
);

CREATE TABLE IF NOT EXISTS "cars" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar,
  "description" text,
  "price" int,
  "car_type" car_type,
  "created_at" timestamp,
  "updated_at" timestamp
);

CREATE TABLE IF NOT EXISTS "car_inventory" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "car_id" bigint,
  "quantity" int,
  "created_at" timestamp,
  "updated_at" timestamp
);

CREATE TABLE IF NOT EXISTS "invoices" (
  "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" bigint,
  "car_id" bigint,
  "total_price" int,
  "start_date" timestamp,
  "end_date" timestamp,
  "returned_at" timestamp,
  "payment_status" payment_status,
  "rent_status" rent_status,
  "created_at" timestamp,
  "updated_at" timestamp
);

create table if not exists car_images (
    id bigint generated by default as identity primary key,
    car_id bigint not null,
    image_url varchar(255) not null default './images/default.png',
    created_at timestamp not null default now(),
    updated_at timestamp not null default now()
);

DO $$ BEGIN
    ALTER TABLE car_images ADD CONSTRAINT fk_car_images_car_id FOREIGN KEY (car_id) REFERENCES cars(id);
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
    ALTER TABLE "car_inventory" ADD CONSTRAINT fk_car_inventory_car_id FOREIGN KEY ("car_id") REFERENCES "cars" ("id");
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
    ALTER TABLE "invoices" ADD CONSTRAINT fk_invoices_user_id FOREIGN KEY ("user_id") REFERENCES "users" ("id");
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;

DO $$ BEGIN
    ALTER TABLE "invoices" ADD CONSTRAINT fk_invoices_car_id FOREIGN KEY ("car_id") REFERENCES "cars" ("id");
EXCEPTION
    WHEN duplicate_object THEN null;
END $$;
